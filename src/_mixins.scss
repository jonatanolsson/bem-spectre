// Mixins
@import "mixins/avatar";
@import "mixins/button";
@import "mixins/clearfix";
@import "mixins/color";
@import "mixins/label";
@import "mixins/position";
@import "mixins/shadow";
@import "mixins/text";
@import "mixins/toast";


/**
Temporary
 */

@mixin breakpoint-down($point) {
  @media only screen and (max-width: calc(#{map-get($breakpoints, $point)} - 0.02px)) {
    @content;
  }
}

@mixin breakpoint-up($point) {
  @media only screen and (min-width: #{map-get($breakpoints, $point)}) {
    @content;
  }
}

@mixin print() {
  @media print {
    @content;
  }
}

@mixin box($size) {
  width: $size;
  height: $size;
}

@mixin circle($size) {
  @include box($size);
  border-radius: 50%;
}

/**
* Returns url for a random image from unsplash
* $size-x int = width
* $size-y int = height
* $random boolean = random image or not
*/
@function placeholder($size-x, $size-y, $random: true, $seed: 'spectre-palceholder') {
  @if $random {
    @return url('https://picsum.photo/' + $size-x + '/' + $size-y);
  } @else {
    @return url('https://picsum.photo/seed/'+ $seed + '/' + $size-x + '/' + $size-y);
  }
}

// Toast variant mixin
@mixin toast-variant($color: $dark-color) {
  background: rgba($color, .9);
  border-color: $color;
}

// Button variant mixin
@mixin button-variant($color: $primary-color) {
  background: $color;
  border-color: darken($color, 3%);
  color: $light-color;
  &:focus {
    @include control-shadow($color);
  }
  &:focus,
  &:hover {
    background: darken($color, 2%);
    border-color: darken($color, 5%);
    color: $light-color;
  }
  &:active,
  &.active {
    background: darken($color, 7%);
    border-color: darken($color, 10%);
    color: $light-color;
  }
  &.loading {
    &::after {
      border-bottom-color: $light-color;
      border-left-color: $light-color;
    }
  }
}

@mixin button-outline-variant($color: $primary-color) {
  background: $light-color;
  border-color: $color;
  color: $color;
  &:focus {
    @include control-shadow($color);
  }
  &:focus,
  &:hover {
    background: lighten($color, 50%);
    border-color: darken($color, 2%);
    color: $color;
  }
  &:active,
  &.active {
    background: $color;
    border-color: darken($color, 5%);
    color: $light-color;
  }
  &.loading {
    &::after {
      border-bottom-color: $color;
      border-left-color: $color;
    }
  }
}


@mixin margin-variant($id: 1, $size: $unit-1) {
  .m-#{$id} {
    margin: $size;
  }
  .mb-#{$id} {
    margin-bottom: $size;
  }
  .ml-#{$id} {
    margin-left: $size;
  }
  .mr-#{$id} {
    margin-right: $size;
  }
  .mt-#{$id} {
    margin-top: $size;
  }
  .mx-#{$id} {
    margin-left: $size;
    margin-right: $size;
  }
  .my-#{$id} {
    margin-bottom: $size;
    margin-top: $size;
  }
}

@mixin padding-variant($id: 1, $size: $unit-1) {
  .p-#{$id} {
    padding: $size;
  }
  .pb-#{$id} {
    padding-bottom: $size;
  }
  .pl-#{$id} {
    padding-left: $size;
  }
  .pr-#{$id} {
    padding-right: $size;
  }
  .pt-#{$id} {
    padding-top: $size;
  }
  .px-#{$id} {
    padding-left: $size;
    padding-right: $size;
  }
  .py-#{$id} {
    padding-bottom: $size;
    padding-top: $size;
  }
}
